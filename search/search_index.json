{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"alberto/","text":"Hugo Alberto LO PRIMERO QUE HAREMOS SERA IMPORTAR EL HUGO INSTALAMOS EL PAQUETE QUE ACABOS DE DESCARGAR MIRAMOS QUE LA VERSION DE HUGO SEA LA CORRECTA CREAMOS EL REPOSITORIO CON EL COMANDO \"HUGO NEW SITE\" CARGAMOS EL TEMA DE ANANKE CREAMOS UN POST RELACIONADO CON LO QUE QUEREMOS PONER EN NUESTRO BLOG, EN MI CASO ES SOBRE COMO TENER UN BUEN DIA CON ALEGRIA SUBIMOS EL SITIO A LOCAL ESTE ES EL RESULTADO CREAMOS EL ARCHIVO PARA PODER DESPLEGAR NUESTRA PAGINA EN GITHUB PAGES ASI SERIA COMO SE VERIA EN GITHUB PAGES SUBIREMOS NUESTRO SITIO A NETIFLY NOS QUEDARA UNA PAGINA TAL QUE ASI:","title":"Alberto"},{"location":"alberto/#hugo-alberto","text":"LO PRIMERO QUE HAREMOS SERA IMPORTAR EL HUGO INSTALAMOS EL PAQUETE QUE ACABOS DE DESCARGAR MIRAMOS QUE LA VERSION DE HUGO SEA LA CORRECTA CREAMOS EL REPOSITORIO CON EL COMANDO \"HUGO NEW SITE\" CARGAMOS EL TEMA DE ANANKE CREAMOS UN POST RELACIONADO CON LO QUE QUEREMOS PONER EN NUESTRO BLOG, EN MI CASO ES SOBRE COMO TENER UN BUEN DIA CON ALEGRIA SUBIMOS EL SITIO A LOCAL ESTE ES EL RESULTADO CREAMOS EL ARCHIVO PARA PODER DESPLEGAR NUESTRA PAGINA EN GITHUB PAGES ASI SERIA COMO SE VERIA EN GITHUB PAGES SUBIREMOS NUESTRO SITIO A NETIFLY NOS QUEDARA UNA PAGINA TAL QUE ASI:","title":"Hugo Alberto"},{"location":"laura/","text":"Instalaci\u00f3n de MkDocs MkDocs es una herramienta poderosa y simple para crear documentaci\u00f3n est\u00e1tica a partir de archivos Markdown. Esta gu\u00eda detalla c\u00f3mo instalar MkDocs en Debian utilizando un entorno virtual de Python. Actualizaci\u00f3n del sistema Actualiza los repositorios y paquetes del sistema para garantizar que trabajes con las versiones m\u00e1s recientes. Instalaci\u00f3n de Git Instala Git, que ser\u00e1 necesario para gestionar proyectos de MkDocs y trabajar con repositorios. Instalaci\u00f3n de Python y pip Instala Python 3 y su administrador de paquetes pip, herramientas necesarias para manejar dependencias. Instalaci\u00f3n del m\u00f3dulo de entornos virtuales Configura el m\u00f3dulo que permite crear y gestionar entornos virtuales de Python. Creaci\u00f3n de un entorno virtual 5.1 Ubica tu carpeta personal Accede a tu directorio personal o a la ubicaci\u00f3n deseada donde crear\u00e1s el entorno virtual. 5.2 Crea un entorno virtual Configura un entorno virtual de Python donde se instalar\u00e1n las dependencias de MkDocs. 5.3 Activa el entorno virtual Activa el entorno para comenzar a instalar dependencias y trabajar en el entorno aislado. Instalaci\u00f3n de MkDocs Instala MkDocs dentro del entorno virtual para gestionar la documentaci\u00f3n de tus proyectos. Verificaciones y comprobaciones 7.1 Verifica las versiones de Python y pip Aseg\u00farate de que Python y pip est\u00e1n correctamente configurados en tu entorno virtual. 7.2 Instala y verifica dependencias adicionales Prueba la instalaci\u00f3n de bibliotecas complementarias y lista las dependencias instaladas. 7.3 Verifica la instalaci\u00f3n de MkDocs Comprueba que MkDocs est\u00e1 correctamente instalado verificando su versi\u00f3n. \u00a1Instalaci\u00f3n completada! Ahora tienes MkDocs instalado y listo para usar. Puedes comenzar a crear tu proyecto y servir la documentaci\u00f3n en un navegador. Mkdocs Creamos repositorio en Github Entramos en gitHub y creamos un repositorio llamado Actividad22_3_LAR Creamos grupo LAR Configuramos el mkdocs.yml Visualizar la pagina Visualizamos la pagina de mkdocs con el comando mkdocs serve -a y la ip del debian","title":"Laura"},{"location":"laura/#instalacion-de-mkdocs","text":"MkDocs es una herramienta poderosa y simple para crear documentaci\u00f3n est\u00e1tica a partir de archivos Markdown. Esta gu\u00eda detalla c\u00f3mo instalar MkDocs en Debian utilizando un entorno virtual de Python.","title":"Instalaci\u00f3n de MkDocs"},{"location":"laura/#actualizacion-del-sistema","text":"Actualiza los repositorios y paquetes del sistema para garantizar que trabajes con las versiones m\u00e1s recientes.","title":"Actualizaci\u00f3n del sistema"},{"location":"laura/#instalacion-de-git","text":"Instala Git, que ser\u00e1 necesario para gestionar proyectos de MkDocs y trabajar con repositorios.","title":"Instalaci\u00f3n de Git"},{"location":"laura/#instalacion-de-python-y-pip","text":"Instala Python 3 y su administrador de paquetes pip, herramientas necesarias para manejar dependencias.","title":"Instalaci\u00f3n de Python y pip"},{"location":"laura/#instalacion-del-modulo-de-entornos-virtuales","text":"Configura el m\u00f3dulo que permite crear y gestionar entornos virtuales de Python.","title":"Instalaci\u00f3n del m\u00f3dulo de entornos virtuales"},{"location":"laura/#creacion-de-un-entorno-virtual","text":"","title":"Creaci\u00f3n de un entorno virtual"},{"location":"laura/#51-ubica-tu-carpeta-personal","text":"Accede a tu directorio personal o a la ubicaci\u00f3n deseada donde crear\u00e1s el entorno virtual.","title":"5.1 Ubica tu carpeta personal"},{"location":"laura/#52-crea-un-entorno-virtual","text":"Configura un entorno virtual de Python donde se instalar\u00e1n las dependencias de MkDocs.","title":"5.2 Crea un entorno virtual"},{"location":"laura/#53-activa-el-entorno-virtual","text":"Activa el entorno para comenzar a instalar dependencias y trabajar en el entorno aislado.","title":"5.3 Activa el entorno virtual"},{"location":"laura/#instalacion-de-mkdocs_1","text":"Instala MkDocs dentro del entorno virtual para gestionar la documentaci\u00f3n de tus proyectos.","title":"Instalaci\u00f3n de MkDocs"},{"location":"laura/#verificaciones-y-comprobaciones","text":"","title":"Verificaciones y comprobaciones"},{"location":"laura/#71-verifica-las-versiones-de-python-y-pip","text":"Aseg\u00farate de que Python y pip est\u00e1n correctamente configurados en tu entorno virtual.","title":"7.1 Verifica las versiones de Python y pip"},{"location":"laura/#72-instala-y-verifica-dependencias-adicionales","text":"Prueba la instalaci\u00f3n de bibliotecas complementarias y lista las dependencias instaladas.","title":"7.2 Instala y verifica dependencias adicionales"},{"location":"laura/#73-verifica-la-instalacion-de-mkdocs","text":"Comprueba que MkDocs est\u00e1 correctamente instalado verificando su versi\u00f3n.","title":"7.3 Verifica la instalaci\u00f3n de MkDocs"},{"location":"laura/#instalacion-completada","text":"Ahora tienes MkDocs instalado y listo para usar. Puedes comenzar a crear tu proyecto y servir la documentaci\u00f3n en un navegador.","title":"\u00a1Instalaci\u00f3n completada!"},{"location":"laura/#mkdocs","text":"","title":"Mkdocs"},{"location":"laura/#creamos-repositorio-en-github","text":"Entramos en gitHub y creamos un repositorio llamado Actividad22_3_LAR","title":"Creamos repositorio en Github"},{"location":"laura/#creamos-grupo-lar","text":"","title":"Creamos grupo LAR"},{"location":"laura/#configuramos-el-mkdocsyml","text":"","title":"Configuramos el mkdocs.yml"},{"location":"laura/#visualizar-la-pagina","text":"Visualizamos la pagina de mkdocs con el comando mkdocs serve -a y la ip del debian","title":"Visualizar la pagina"},{"location":"raul/","text":"Tutorial de PaperMod Paso 1 Configuracion del Hugo Para empezar tendremos que ir a Visual Studio, donde podremos conectarnos a la maquina virtual en remoto por SSH, para poder trabajar mejor. Luego tendremos que ir a un Terminal y crear uno nuevo ahi lo que haremos un wget https://github.com/gohugoio/hugo/releases/download/v0.135.0/hugo_0.135.0_linux-amd64.deb Con el podremos hacer que luego se instale el hugo con apt install ./hugo_0.135.0_linux-amd64.deb Eso si haciendolo siempre dentro de root. Luego de eso saldremos de root y crearemos un sitio con hugo new site Actividad22_2_LAR --format yaml Y aqui deberemos de hacer algo diferente ya que usaremos un estilo nuevo. Paso 2 Instalacion del estilo Para ello deberemos de entrar con cd a sitio que acabamos de hacer y en su config.yml o como se llame ya que a veces se llama Hugo.yml, pero antes de hacer eso deberemos de hacer el siguiente comando: git init Para inicializarlo y luego haremos: git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod Esto instalara el estilo, y con: git submodule update --init --recursive Esto se necesitara para reclonar los repositorios, ya que sin esto no se pueden clonar. Y para terminar haremos un: git submodule update --remote --merge Paso 3 Configuracion del Sitio Para configurar el sitio tendremos que ir al config.yml y dentro de este agregar una linea que seria: theme: [\"PaperMod\"] Asi se crearia el sitio con el estilo que queramos, en mi caso PaperMod. Cada estilo tiene su propia Wiki para poder instalarlo correctamente, se recomienda que se vea. Paso 4 Crear un Post Para crear un post tendremos que estar dentro del sitio (del directorio donde este) y hacer un: hugo new posts\\NombrePost\\index.md Haremos un markdown sencillito (Para las imagenes es indicandolo con ./NombreImagen.png o .jpg, vamos el formato que tenga) Una vez realizado, guardaremos con Ctrl+S y en el terminal haremos un: hugo server --bind \"Ip_Maquina\" Asi activamos el sitio, solo tendremos que ir a un navegador y ponere la ip y automaticamente deberia de enviar a la pagina. Paso 6 Pasarlo a Github Para ello deberemos de ir a Github y crear un repositorio con el mismo nombre del sitio. (Para no liarnos) Cuando lo hagamos tendremos que copiar el link que nos sale e ir al Visual y hacer un git remote origin https://nombreusuario:token@ruta_del_git Asi lo conectamos al repositorio y para ponerlo simplemente haremos un git add , git commit -m \"Comentario\" y un git push -u origin master . Cuando lo hagamos vamos a GitHub y dentro del repositorio, vamos a Setting, Work and Pages y activamos el sitio de manera normal. Si queremos podemos usar CloadFlare o Netify para que se visualice mejor.","title":"Ra\u00fal"},{"location":"raul/#tutorial-de-papermod","text":"","title":"Tutorial de PaperMod"},{"location":"raul/#paso-1-configuracion-del-hugo","text":"Para empezar tendremos que ir a Visual Studio, donde podremos conectarnos a la maquina virtual en remoto por SSH, para poder trabajar mejor. Luego tendremos que ir a un Terminal y crear uno nuevo ahi lo que haremos un wget https://github.com/gohugoio/hugo/releases/download/v0.135.0/hugo_0.135.0_linux-amd64.deb Con el podremos hacer que luego se instale el hugo con apt install ./hugo_0.135.0_linux-amd64.deb Eso si haciendolo siempre dentro de root. Luego de eso saldremos de root y crearemos un sitio con hugo new site Actividad22_2_LAR --format yaml Y aqui deberemos de hacer algo diferente ya que usaremos un estilo nuevo.","title":"Paso 1 Configuracion del Hugo"},{"location":"raul/#paso-2-instalacion-del-estilo","text":"Para ello deberemos de entrar con cd a sitio que acabamos de hacer y en su config.yml o como se llame ya que a veces se llama Hugo.yml, pero antes de hacer eso deberemos de hacer el siguiente comando: git init Para inicializarlo y luego haremos: git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod Esto instalara el estilo, y con: git submodule update --init --recursive Esto se necesitara para reclonar los repositorios, ya que sin esto no se pueden clonar. Y para terminar haremos un: git submodule update --remote --merge","title":"Paso 2 Instalacion del estilo"},{"location":"raul/#paso-3-configuracion-del-sitio","text":"Para configurar el sitio tendremos que ir al config.yml y dentro de este agregar una linea que seria: theme: [\"PaperMod\"] Asi se crearia el sitio con el estilo que queramos, en mi caso PaperMod. Cada estilo tiene su propia Wiki para poder instalarlo correctamente, se recomienda que se vea.","title":"Paso 3 Configuracion del Sitio"},{"location":"raul/#paso-4-crear-un-post","text":"Para crear un post tendremos que estar dentro del sitio (del directorio donde este) y hacer un: hugo new posts\\NombrePost\\index.md Haremos un markdown sencillito (Para las imagenes es indicandolo con ./NombreImagen.png o .jpg, vamos el formato que tenga) Una vez realizado, guardaremos con Ctrl+S y en el terminal haremos un: hugo server --bind \"Ip_Maquina\" Asi activamos el sitio, solo tendremos que ir a un navegador y ponere la ip y automaticamente deberia de enviar a la pagina.","title":"Paso 4 Crear un Post"},{"location":"raul/#paso-6-pasarlo-a-github","text":"Para ello deberemos de ir a Github y crear un repositorio con el mismo nombre del sitio. (Para no liarnos) Cuando lo hagamos tendremos que copiar el link que nos sale e ir al Visual y hacer un git remote origin https://nombreusuario:token@ruta_del_git Asi lo conectamos al repositorio y para ponerlo simplemente haremos un git add , git commit -m \"Comentario\" y un git push -u origin master . Cuando lo hagamos vamos a GitHub y dentro del repositorio, vamos a Setting, Work and Pages y activamos el sitio de manera normal. Si queremos podemos usar CloadFlare o Netify para que se visualice mejor.","title":"Paso 6 Pasarlo a Github"}]}